(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{288:function(t,s,a){"use strict";a.r(s);var r=a(3),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模块系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块系统"}},[t._v("#")]),t._v(" 模块系统")]),t._v(" "),a("h2",{attrs:{id:"现状"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现状"}},[t._v("#")]),t._v(" 现状")]),t._v(" "),a("p",[t._v("伴随着移动互联的大潮，当今越来越多的网站已经从网页模式进化到了 Webapp 模式。它们运行在现代的高级浏览器里，使用 HTML5、 CSS3、 ES6 等更新的技术来开发丰富的功能，网页已经不仅仅是完成浏览的基本需求，并且 webapp 通常是一个单页面应用，每一个视图通过异步的方式加载，这导致页面初始化和使用过程中会加载越来越多的 JavaScript 代码，这给前端开发的流程和资源组织带来了巨大的挑战。")]),t._v(" "),a("p",[t._v("前端开发和其他开发工作的主要区别，首先是前端是基于多语言、多层次的编码和组织工作，其次前端产品的交付是基于浏览器，这些资源是通过增量加载的方式运行到浏览器端，如何在开发环境组织好这些碎片化的代码和资源，并且保证他们在浏览器端快速、优雅的加载和更新，就需要一个模块化系统，这个理想中的模块化系统是前端工程师多年来一直探索的难题。")]),t._v(" "),a("h2",{attrs:{id:"模块系统的演进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块系统的演进"}},[t._v("#")]),t._v(" 模块系统的演进")]),t._v(" "),a("p",[t._v("模块系统主要解决模块的定义、依赖和导出，先来看看已经存在的模块系统。")]),t._v(" "),a("h3",{attrs:{id:"script-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-标签"}},[t._v("#")]),t._v(" "),a("code",[t._v("<script>")]),t._v("标签")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module1.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module2.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"libraryA.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module3.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("这是最原始的 JavaScript 文件加载方式，如果把每一个文件看做是一个模块，那么他们的接口通常是暴露在全局作用域下，也就是定义在 "),a("code",[t._v("window")]),t._v(" 对象中，不同模块的接口调用都是一个作用域中，一些复杂的框架，会使用命名空间的概念来组织这些模块的接口，典型的例子如 "),a("a",{attrs:{href:"http://yuilibrary.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("YUI"),a("OutboundLink")],1),t._v(" 库。")]),t._v(" "),a("p",[t._v("这种原始的加载方式暴露了一些显而易见的弊端：")]),t._v(" "),a("ul",[a("li",[t._v("全局作用域下容易造成变量冲突")]),t._v(" "),a("li",[t._v("文件只能按照 "),a("code",[t._v("<script>")]),t._v(" 的书写顺序进行加载")]),t._v(" "),a("li",[t._v("开发人员必须主观解决模块和代码库的依赖关系")]),t._v(" "),a("li",[t._v("在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪")])]),t._v(" "),a("h3",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" CommonJS")]),t._v(" "),a("p",[t._v("服务器端的 Node.js 遵循 "),a("a",{attrs:{href:"http://wiki.commonjs.org/wiki/CommonJS",target:"_blank",rel:"noopener noreferrer"}},[t._v("CommonJS 规范"),a("OutboundLink")],1),t._v("，该规范的核心思想是允许模块通过 "),a("code",[t._v("require")]),t._v(" 方法来同步加载所要依赖的其他模块，然后通过 "),a("code",[t._v("exports")]),t._v(" 或 "),a("code",[t._v("module.exports")]),t._v(" 来导出需要暴露的接口。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../file.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doStuff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("优点：")]),t._v(" "),a("ul",[a("li",[t._v("服务器端模块便于重用")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("NPM"),a("OutboundLink")],1),t._v(" 中已经有将近 20 万个可以使用模块包")]),t._v(" "),a("li",[t._v("简单并容易使用")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的")]),t._v(" "),a("li",[t._v("不能非阻塞的并行加载多个模块")])]),t._v(" "),a("p",[t._v("实现：")]),t._v(" "),a("ul",[a("li",[t._v("服务器端的 "),a("a",{attrs:{href:"http://www.nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://browserify.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Browserify"),a("OutboundLink")],1),t._v("，浏览器端的 CommonJS 实现，可以使用 NPM 的模块，但是编译打包后的文件体积可能很大")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/medikoo/modules-webmake",target:"_blank",rel:"noopener noreferrer"}},[t._v("modules-webmake"),a("OutboundLink")],1),t._v("，类似 Browserify，还不如 Browserify 灵活")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/substack/wreq",target:"_blank",rel:"noopener noreferrer"}},[t._v("wreq"),a("OutboundLink")],1),t._v("，Browserify 的前身")])]),t._v(" "),a("h3",{attrs:{id:"amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd"}},[t._v("#")]),t._v(" AMD")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/amdjs/amdjs-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Asynchronous Module Definition"),a("OutboundLink")],1),t._v(" 规范其实只有一个主要接口 "),a("code",[t._v("define(id?, dependencies?, factory)")]),t._v("，它要在声明模块的时候指定所有的依赖 "),a("code",[t._v("dependencies")]),t._v("，并且还要当做形参传到 "),a("code",[t._v("factory")]),t._v(" 中，对于依赖的模块提前执行，依赖前置。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dep1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dep2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("d1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" someExportedValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../file"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("优点：")]),t._v(" "),a("ul",[a("li",[t._v("适合在浏览器环境中异步加载模块")]),t._v(" "),a("li",[t._v("可以并行加载多个模块")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不顺畅")]),t._v(" "),a("li",[t._v("不符合通用的模块化思维方式，是一种妥协的实现")])]),t._v(" "),a("p",[t._v("实现：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://requirejs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("RequireJS"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/cujojs/curl",target:"_blank",rel:"noopener noreferrer"}},[t._v("curl"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[t._v("#")]),t._v(" CMD")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/cmdjs/specification/blob/master/draft/module.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Common Module Definition"),a("OutboundLink")],1),t._v(" 规范和 AMD 很相似，尽量保持简单，并与 CommonJS 和 Node.js 的 Modules 规范保持了很大的兼容性。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jquery'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Spinning "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./spinning'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("doSomething "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("优点：")]),t._v(" "),a("ul",[a("li",[t._v("依赖就近，延迟执行")]),t._v(" "),a("li",[t._v("可以很容易在 Node.js 中运行")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("依赖 SPM 打包，模块的加载逻辑偏重")])]),t._v(" "),a("p",[t._v("实现：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://seajs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sea.js"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/cloudcome/coolie",target:"_blank",rel:"noopener noreferrer"}},[t._v("coolie"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"umd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umd"}},[t._v("#")]),t._v(" UMD")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/umdjs/umd",target:"_blank",rel:"noopener noreferrer"}},[t._v("Universal Module Definition"),a("OutboundLink")],1),t._v(" 规范类似于兼容 CommonJS 和 AMD 的语法糖，是模块定义的跨平台解决方案。")]),t._v(" "),a("h3",{attrs:{id:"es6-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块"}},[t._v("#")]),t._v(" ES6 模块")]),t._v(" "),a("p",[t._v("ECMAScript6 标准增加了 JavaScript 语言层面的模块体系定义。"),a("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/module",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 模块"),a("OutboundLink")],1),t._v("的设计思想，是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS 和 AMD 模块，都只能在运行时确定这些东西。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jquery"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doStuff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmodule "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localModule"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("优点：")]),t._v(" "),a("ul",[a("li",[t._v("容易进行静态分析")]),t._v(" "),a("li",[t._v("面向未来的 ECMAScript 标准")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("原生浏览器端还没有实现该标准")]),t._v(" "),a("li",[t._v("全新的命令字，新版的 Node.js 才支持")])]),t._v(" "),a("p",[t._v("实现：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"期望的模块系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#期望的模块系统"}},[t._v("#")]),t._v(" 期望的模块系统")]),t._v(" "),a("p",[t._v("可以兼容多种模块风格，尽量可以利用已有的代码，不仅仅只是 JavaScript 模块化，还有 CSS、图片、字体等资源也需要模块化。")]),t._v(" "),a("h2",{attrs:{id:"前端模块加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端模块加载"}},[t._v("#")]),t._v(" 前端模块加载")]),t._v(" "),a("p",[t._v("前端模块要在客户端中执行，所以他们需要增量加载到浏览器中。")]),t._v(" "),a("p",[t._v("模块的加载和传输，我们首先能想到两种极端的方式，一种是每个模块文件都单独请求，另一种是把所有模块打包成一个文件然后只请求一次。显而易见，每个模块都发起单独的请求造成了请求次数过多，导致应用启动速度慢；一次请求加载所有模块导致流量浪费、初始化过程慢。这两种方式都不是好的解决方案，它们过于简单粗暴。")]),t._v(" "),a("p",[a("strong",[t._v("分块传输")]),t._v("，按需进行懒加载，在实际用到某些模块的时候再增量更新，才是较为合理的模块加载方案。")]),t._v(" "),a("p",[t._v("要实现模块的按需加载，就需要一个对整个代码库中的模块进行静态分析、编译打包的过程。")]),t._v(" "),a("h2",{attrs:{id:"所有资源都是模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所有资源都是模块"}},[t._v("#")]),t._v(" 所有资源都是模块")]),t._v(" "),a("p",[t._v("在上面的分析过程中，我们提到的模块仅仅是指 JavaScript 模块文件。然而，在前端开发过程中还涉及到样式、图片、字体、HTML 模板等等众多的资源。这些资源还会以各种方言的形式存在，比如 coffeescript、 less、 sass、众多的模板库、多语言系统（i18n）等等。")]),t._v(" "),a("p",[t._v("如果他们都可以视作模块，并且都可以通过"),a("code",[t._v("require")]),t._v("的方式来加载，将带来优雅的开发体验，比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./style.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./style.less"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./template.jade"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./image.png"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("那么如何做到让 "),a("code",[t._v("require")]),t._v(" 能加载各种资源呢？")]),t._v(" "),a("h2",{attrs:{id:"静态分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态分析"}},[t._v("#")]),t._v(" 静态分析")]),t._v(" "),a("p",[t._v("在编译的时候，要对整个代码进行静态分析，分析出各个模块的类型和它们依赖关系，然后将不同类型的模块提交给适配的加载器来处理。比如一个用 LESS 写的样式模块，可以先用 LESS 加载器将它转成一个 CSS 模块，在通过 CSS 模块把他插入到页面的 "),a("code",[t._v("<style>")]),t._v(" 标签中执行。Webpack 就是在这样的需求中应运而生。")]),t._v(" "),a("p",[t._v("同时，为了能利用已经存在的各种框架、库和已经写好的文件，我们还需要一个模块加载的兼容策略，来避免重写所有的模块。")]),t._v(" "),a("p",[t._v("那么接下来，让我们开始 Webpack 的神奇之旅吧。")]),t._v(" "),a("p",[t._v("原文地址："),a("a",{attrs:{href:"https://zhaoda.net/webpack-handbook/module-system.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webpack 中文指南"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);