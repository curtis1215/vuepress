(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{289:function(n,t,s){"use strict";s.r(t);var a=s(3),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" Nginx")]),n._v(" "),s("h2",{attrs:{id:"nginx-特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-特点"}},[n._v("#")]),n._v(" Nginx 特点")]),n._v(" "),s("ul",[s("li",[n._v("高性能的 web 服务器，开源免费")]),n._v(" "),s("li",[n._v("一般用于做静态服务、负载均衡")]),n._v(" "),s("li",[n._v("反向代理")])]),n._v(" "),s("h2",{attrs:{id:"nginx-简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-简单使用"}},[n._v("#")]),n._v(" Nginx 简单使用")]),n._v(" "),s("h3",{attrs:{id:"下载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[n._v("#")]),n._v(" 下载")]),n._v(" "),s("p",[n._v("Windows："),s("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("http://nginx.org/en/download.html"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("MacOS:")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[n._v("brew "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" nginx\n")])])]),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[n._v("#")]),n._v(" 配置")]),n._v(" "),s("p",[n._v("Windows:")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[n._v("C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("nginx.conf\n")])])]),s("p",[n._v("Mac:")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[n._v("/usr/local/etc/nginx/nginx.conf\n")])])]),s("h3",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[n._v("#")]),n._v(" 常用命令")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 测试配置文件格式是否正确")]),n._v("\nnginx -t\nnginx: the configuration "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" /usr/local/etc/nginx/nginx.conf syntax is ok\nnginx: configuration "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" /usr/local/etc/nginx/nginx.conf "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("test")]),n._v(" is successful\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 启动")]),n._v("\nnginx\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 重启")]),n._v("\nnginx -s reload\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 停止")]),n._v("\nnginx -s stop\n")])])]),s("p",[n._v("修改 "),s("code",[n._v("nginx.conf")]),n._v(":")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" /usr/local/etc/nginx\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("open")]),n._v(" nginx.conf\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 或者 nano nginx.conf")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 或者 vi nginx.conf")]),n._v("\n")])])]),s("h3",{attrs:{id:"vim-快速使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-快速使用"}},[n._v("#")]),n._v(" Vim 快速使用")]),n._v(" "),s("p",[n._v("vim 的基本三种模式："),s("strong",[n._v("命令模式")]),n._v("、"),s("strong",[n._v("插入模式")]),n._v("、"),s("strong",[n._v("底行模式")])]),n._v(" "),s("ul",[s("li",[n._v("进入 vim："),s("code",[n._v("vim test.c")]),n._v(" （刚进入是命令模式，不可输入文字）")]),n._v(" "),s("li",[n._v("命令模式 --\x3e 插入模式")])]),n._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("1.输入a   （进入后，是从目前光标所在位置的下一位置开始输入文字）\n2.输入i    （进入后，是从光标当前所在位置开始输入文字）\n3.输入o   （进入后，是插入新的一行，从行首开始输入文字）\n")])])]),s("ul",[s("li",[n._v("命令模式 --\x3e 底行模式：输入 "),s("code",[n._v("：")])]),n._v(" "),s("li",[n._v("不管当前是插入模式，还是底行模式，都要按 Esc 退入到命令模式才能进入其它模式")]),n._v(" "),s("li",[n._v("退出 vim 切换到底行模式 输入 q 退出")])]),n._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("1.输入：w（保存当前文件）\n2.输入：wq（保存并退出）\n3.输入：q!（强制退出）\n")])])]),s("h2",{attrs:{id:"nginx-反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-反向代理"}},[n._v("#")]),n._v(" Nginx 反向代理")]),n._v(" "),s("p",[s("strong",[n._v("正向代理")]),n._v("帮助客户端访问客户端自己访问不到的服务器，然后将结果返回给客户端。")]),n._v(" "),s("p",[s("strong",[n._v("反向代理")]),n._v("拿到客户端的请求，将请求转发给其他的服务器，主要的场景是维持服务器集群的负载均衡，换句话说，反向代理帮其它的服务器拿到请求，然后选择一个合适的服务器，将请求转交给它。")]),n._v(" "),s("p",[n._v("因此，两者的区别就很明显了，正向代理服务器是帮客户端做事情，而反向代理服务器是帮其它的服务器做事情。")]),n._v(" "),s("p",[n._v("好了，那 Nginx 是如何来解决跨域的呢？")]),n._v(" "),s("p",[n._v("比如说现在客户端的域名为"),s("code",[n._v("client.com")]),n._v("，服务器的域名为"),s("code",[n._v("server.com")]),n._v("，客户端向服务器发送 Ajax 请求，当然会跨域了，那这个时候让 Nginx 登场了，通过下面"),s("code",[n._v("nginx.conf")]),n._v("这个配置：")]),n._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("server {\n  listen  80;\n  server_name  client.com;\n  location /api {\n    proxy_pass server.com;\n  }\n}\n")])])]),s("p",[n._v("Nginx 相当于起了一个跳板机，这个跳板机的域名也是"),s("code",[n._v("client.com")]),n._v("，让客户端首先访问 "),s("code",[n._v("client.com/api")]),n._v("，这当然没有跨域，然后 Nginx 服务器作为反向代理，将请求转发给"),s("code",[n._v("server.com")]),n._v("，当响应返回时又将响应给到客户端，这就完成整个跨域请求的过程。")]),n._v(" "),s("h2",{attrs:{id:"实战操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战操作"}},[n._v("#")]),n._v(" 实战操作")]),n._v(" "),s("p",[n._v("Github地址："),s("a",{attrs:{href:"https://github.com/yangtao2o/node-blog-express-koa2",target:"_blank",rel:"noopener noreferrer"}},[n._v("Node-Blog"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("首先，启动我们的接口服务：")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" node-blog\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("npm")]),n._v(" run dev\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# http://localhost:8000")]),n._v("\n")])])]),s("p",[n._v("接着，启动我们的前端资源服务：")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" html-test\nhttp-server -p "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("8001")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# Available on:")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#   http://127.0.0.1:8001")]),n._v("\n")])])]),s("p",[n._v("这样，我们要访问的是 "),s("code",[n._v("localhost:8080")]),n._v("，首页下的内容我们需要代理到 "),s("code",[n._v("http://localhost:8000")]),n._v("，而接口处于另一个端口："),s("code",[n._v("http://localhost:8001")]),n._v("，所以：")]),n._v(" "),s("p",[n._v("打开 "),s("code",[n._v("nginx.conf")]),n._v(" 文件，设置：")]),n._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("#user  nobody;\nworker_processes  2;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       8080;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        # location / {\n        #     root   html;\n        #     index  index.html index.htm;\n        # }\n\n        location / {\n            proxy_pass http://localhost:8001;\n        }\n\n        location /api/ {\n            proxy_pass http://localhost:8000;\n            proxy_set_header Host $host;\n        }\n\n    }\n\n    include servers/*;\n}\n")])])]),s("p",[n._v("主要修改：")]),n._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("location / {\n    proxy_pass http://localhost:8001;\n}\n\nlocation /api/ {\n    proxy_pass http://localhost:8000;\n    proxy_set_header Host $host;\n}\n")])])]),s("p",[n._v("然后访问："),s("code",[n._v("http://localhost:8080")]),n._v("，确保redis、mysql 已开启")]),n._v(" "),s("p",[n._v("接着，测试增删改查等功能，基本上没有问题。")])])}),[],!1,null,null,null);t.default=e.exports}}]);