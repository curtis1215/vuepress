(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{256:function(t,e,a){"use strict";a.r(e);var v=a(3),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),a("p",[t._v("HTTP 是一种"),a("strong",[t._v("超文本传输协议")]),t._v("("),a("code",[t._v("Hypertext Transfer Protocol")]),t._v(")，超文本传输协议可以进行文字分割：")]),t._v(" "),a("ul",[a("li",[t._v("超文本（Hypertext）")]),t._v(" "),a("li",[t._v("传输（Transfer）")]),t._v(" "),a("li",[t._v("协议（Protocol）")])]),t._v(" "),a("p",[t._v("按照范围的大小： 协议 > 传输 > 超文本。")]),t._v(" "),a("p",[t._v("即，"),a("strong",[t._v("HTTP")]),t._v(" 是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范。")]),t._v(" "),a("h2",{attrs:{id:"http-请求特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-请求特征"}},[t._v("#")]),t._v(" HTTP 请求特征")]),t._v(" "),a("ul",[a("li",[t._v("支持"),a("strong",[t._v("客户-服务器")]),t._v("模式")]),t._v(" "),a("li",[a("strong",[t._v("简单快速")]),t._v("：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有 GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于 HTTP 协议简单，使得 HTTP 服务器的程序规模小，因而通信速度很快。")]),t._v(" "),a("li",[a("strong",[t._v("灵活")]),t._v("：HTTP 允许传输任意类型的数据对象。正在传输的类型由 Content-Type 加以标记。")]),t._v(" "),a("li",[a("strong",[t._v("无连接")]),t._v("：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。")]),t._v(" "),a("li",[a("strong",[t._v("无状态")]),t._v("：HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。")])]),t._v(" "),a("h2",{attrs:{id:"http-报文组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-报文组成"}},[t._v("#")]),t._v(" HTTP 报文组成")]),t._v(" "),a("p",[t._v("HTTP 协议主要由三大部分组成：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("起始行")]),t._v("（start line）：描述请求或响应的基本信息；")]),t._v(" "),a("li",[a("strong",[t._v("头部字段")]),t._v("（header）：使用 key-value 形式更详细地说明报文；")]),t._v(" "),a("li",[a("strong",[t._v("消息正文")]),t._v("（entity）：实际传输的数据，它不一定是纯文本，可以是图片、视频等二进制数据。")])]),t._v(" "),a("p",[t._v("其中起始行和头部字段并成为 "),a("strong",[t._v("请求头")]),t._v(" 或者 "),a("strong",[t._v("响应头")]),t._v("，统称为 "),a("strong",[t._v("Header")]),t._v("；消息正文也叫做实体，称为 "),a("strong",[t._v("body")]),t._v("。")]),t._v(" "),a("p",[t._v("HTTP 协议规定每次发送的报文必须要有 Header，但是可以没有 body，也就是说头信息是必须的，实体信息可以没有。而且在 header 和 body 之间必须要有一个"),a("strong",[t._v("空行")]),t._v("（CRLF）。")]),t._v(" "),a("p",[t._v("比如使用"),a("code",[t._v("curl")]),t._v("工具请求"),a("code",[t._v("www.baidu.com")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" GET / HTTP/1.1             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求起始行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Host: www.baidu.com        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求头头部字段")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" User-Agent: curl/7.64.1\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Accept: */*\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 空行 CRLF")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" HTTP/1.1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" OK            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应状态行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Accept-Ranges: bytes       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应头头部字段")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Cache-Control: private, no-cache, no-store, proxy-revalidate, no-transform\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Connection: keep-alive\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Content-Length: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2381")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Content-Type: text/html\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Date: Thu, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" 04:40:40 GMT\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Etag: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"588604f8-94d"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Last-Modified: Mon, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":28:24 GMT\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Pragma: no-cache\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Server: bfe/1.0.8.18\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Set-Cookie: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("BDORZ")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27315")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" max-age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("domain")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".baidu.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 空行 CRLF")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("DOCTYPE html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实体 Body")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("--STATUS OK--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("p",[t._v("每个报文的起始行都是由三个字段组成："),a("strong",[t._v("方法、URL 字段和 HTTP 版本字段")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"http-请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-请求方法"}},[t._v("#")]),t._v(" HTTP 请求方法")]),t._v(" "),a("p",[t._v("主要有：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("GET")]),t._v(" 获取资源")]),t._v(" "),a("li",[a("code",[t._v("POST")]),t._v(" 向服务器端发送数据，传输实体主体")]),t._v(" "),a("li",[a("code",[t._v("PUT")]),t._v(" 传输文件")]),t._v(" "),a("li",[a("code",[t._v("HEAD")]),t._v(" 获取报文首部")]),t._v(" "),a("li",[a("code",[t._v("DELETE")]),t._v(" 删除文件")]),t._v(" "),a("li",[a("code",[t._v("OPTIONS")]),t._v(" 询问支持的方法")]),t._v(" "),a("li",[a("code",[t._v("TRACE")]),t._v(" 追踪路径")])]),t._v(" "),a("h3",{attrs:{id:"方法含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法含义"}},[t._v("#")]),t._v(" 方法含义")]),t._v(" "),a("p",[a("strong",[t._v("GET 获取资源")]),t._v("，GET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器端解析后返回响应内容。也就是说，如果请求的资源是文本，那就保持原样返回；")]),t._v(" "),a("p",[a("strong",[t._v("POST 传输实体")]),t._v("，虽然 GET 方法也可以传输主体信息，但是便于区分，我们一般不用 GET 传输实体信息，反而使用 POST 传输实体信息，")]),t._v(" "),a("p",[a("strong",[t._v("PUT 传输文件")]),t._v("，PUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请求报文的主体中包含文件内容，然后保存到请求 URI 指定的位置。")]),t._v(" "),a("p",[t._v("但是，鉴于 HTTP 的 PUT 方法自身不带验证机制，任何人都可以上传文件 , 存在安全性问题，因此一般的 Web 网站不使用该方法。若配合 Web 应用程序的验证机制，或架构设计采用 REST（"),a("code",[t._v("REpresentational State Transfer")]),t._v("，表征状态转移）标准的同类 Web 网站，就可能会开放使用 PUT 方法。")]),t._v(" "),a("p",[a("strong",[t._v("HEAD 获得响应首部")]),t._v("，HEAD 方法和 GET 方法一样，只是不返回报文主体部分。用于确认 URI 的有效性及资源更新的日期时间等。")]),t._v(" "),a("p",[a("strong",[t._v("DELETE 删除文件")]),t._v("，DELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按请求 URI 删除指定的资源。")]),t._v(" "),a("p",[a("strong",[t._v("OPTIONS 询问支持的方法")]),t._v("，OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。")]),t._v(" "),a("p",[a("strong",[t._v("TRACE 追踪路径")]),t._v("，TRACE 方法是让 Web 服务器端将之前的请求通信环回给客户端的方法。")]),t._v(" "),a("p",[a("strong",[t._v("CONNECT 要求用隧道协议连接代理")]),t._v("，CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 SSL（"),a("code",[t._v("Secure Sockets Layer")]),t._v("，安全套接层）和 TLS（"),a("code",[t._v("Transport Layer Security")]),t._v("，传输层安全）协议把通信内容加密后经网络隧道传输。")]),t._v(" "),a("h3",{attrs:{id:"get-和-post-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-有什么区别"}},[t._v("#")]),t._v(" GET 和 POST 有什么区别")]),t._v(" "),a("p",[t._v("首先最直观的是语义上的区别。")]),t._v(" "),a("p",[t._v("而后又有这样一些具体的差别:")]),t._v(" "),a("ul",[a("li",[t._v("从"),a("strong",[t._v("缓存")]),t._v("的角度，GET 请求会被浏览器主动缓存下来，留下历史记录，而 POST 默认不会。")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("编码")]),t._v("的角度，GET 只能进行 URL 编码，只能接收 ASCII 字符，而 POST 没有限制。")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("参数")]),t._v("的角度，GET 一般放在 URL 中，因此不安全，POST 放在请求体中，更适合传输敏感信息。")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("幂等性")]),t._v("的角度，GET 是幂等的，而 POST 不是。(幂等表示执行相同的操作，结果也是相同的)")]),t._v(" "),a("li",[t._v("从"),a("strong",[t._v("TCP")]),t._v("的角度，GET 请求会把请求报文一次性发出去，而 POST 会分为两个 TCP 数据包，首先发 header 部分，如果服务器响应 100(continue)， 然后发 body 部分。(火狐浏览器除外，它的 POST 请求只发一个 TCP 包)")])]),t._v(" "),a("h2",{attrs:{id:"请求-url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求-url"}},[t._v("#")]),t._v(" 请求 URL")]),t._v(" "),a("p",[a("strong",[t._v("URI")]),t._v(", 全称为(Uniform Resource Identifier), 也就是统一资源标识符，它的作用很简单，就是区分互联网上不同的资源。")]),t._v(" "),a("p",[t._v("但是，它并不是我们常说的网址, 网址指的是 URL, 实际上 URI 包含了 URN 和 URL 两个部分，由于 URL 过于普及，就默认将 URI 视为 URL 了。")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("ul",[a("li",[t._v("协议 （HTTP）")]),t._v(" "),a("li",[t._v("登录信息（username:password）不常用")]),t._v(" "),a("li",[t._v("主机名（www.baidu.com）")]),t._v(" "),a("li",[t._v("端口号 （80/443）")]),t._v(" "),a("li",[t._v("路径 （/a.html）")]),t._v(" "),a("li",[t._v("查询参数 （limit=1）")]),t._v(" "),a("li",[t._v("hash 值（hash，服务器收不到 hash 值，一般为前端的路由跳转）")])]),t._v(" "),a("h3",{attrs:{id:"uri-编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uri-编码"}},[t._v("#")]),t._v(" URI 编码")]),t._v(" "),a("p",[t._v("URI 只能使用"),a("strong",[t._v("ASCII")]),t._v(", ASCII 之外的字符是不支持显示的，而且还有一部分符号是界定符，如果不加以处理就会导致解析出错。")]),t._v(" "),a("p",[t._v("因此，URI 引入了编码机制，将所有非 ASCII 码字符和界定符转为十六进制字节值，然后在前面加个%。如，空格被转义成了"),a("code",[t._v("%20")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"协议-版本号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协议-版本号"}},[t._v("#")]),t._v(" 协议/版本号")]),t._v(" "),a("p",[t._v("表示报文使用的 HTTP 协议版本，如："),a("code",[t._v("HTTP/1.1")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"请求头部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求头部"}},[t._v("#")]),t._v(" 请求头部")]),t._v(" "),a("p",[t._v("HTTP 的请求标头分为四种： "),a("strong",[t._v("通用标头")]),t._v("、"),a("strong",[t._v("请求标头")]),t._v("、"),a("strong",[t._v("响应标头")]),t._v("和"),a("strong",[t._v("实体标头")]),t._v("。MDN："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP Headers"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -v www.baidu.com\n\nHost: www.baidu.com\nUser-Agent: curl/7.64.1\nAccept: */*\n")])])]),a("h3",{attrs:{id:"通用标头-general-header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用标头-general-header"}},[t._v("#")]),t._v(" 通用标头(General Header)")]),t._v(" "),a("p",[t._v("通用标头主要有三个，分别是 "),a("code",[t._v("Date")]),t._v("、"),a("code",[t._v("Cache-Control")]),t._v(" 和 "),a("code",[t._v("Connection")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control:")]),t._v(" private, no-cache, no-store, proxy-revalidate, no-transform\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Connection:")]),t._v(" keep-alive\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Date:")]),t._v(" Thu, 26 Mar 2020 03:43:47 GMT\n")])])]),a("p",[a("strong",[t._v("Date")]),t._v("：格林威治标准时间，这个时间要比北京时间慢八个小时。")]),t._v(" "),a("p",[a("strong",[t._v("Cache-Control")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("max-age")]),t._v("：资源被认为仍然有效的最长时间，与 Expires 不同，这个请求是相对于 request 标头的时间，而 Expires 是相对于响应标头。（请求标头）")]),t._v(" "),a("li",[a("code",[t._v("s-maxage")]),t._v("：重写了 max-age 和 Expires 请求头，仅仅适用于共享缓存，被私有缓存所忽略（这块不理解，看完响应头的 Cache-Control 再进行理解）（请求标头）")]),t._v(" "),a("li",[a("code",[t._v("max-stale")]),t._v("：表示客户端将接受的最大响应时间，以秒为单位。（响应标头）\nmin-fresh: 表示客户端希望响应在指定的最小时间内有效。（响应标头）")])]),t._v(" "),a("p",[a("strong",[t._v("Connection")]),t._v("：")]),t._v(" "),a("p",[t._v("Connection 有两种，一种是持久性连接，即一次事务完成后不关闭网络连接"),a("code",[t._v("Connection: keep-alive")]),t._v("，另一种是非持久性连接，即一次事务完成后关闭网络连接"),a("code",[t._v("Connection: close")]),t._v("。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("首部字段名")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Cache-Control")]),t._v(" "),a("td",[t._v("控制缓存行为")])]),t._v(" "),a("tr",[a("td",[t._v("Connection")]),t._v(" "),a("td",[t._v("链接的管理")])]),t._v(" "),a("tr",[a("td",[t._v("Date")]),t._v(" "),a("td",[t._v("报文日期")])]),t._v(" "),a("tr",[a("td",[t._v("Pragma")]),t._v(" "),a("td",[t._v("报文指令")])]),t._v(" "),a("tr",[a("td",[t._v("Trailer")]),t._v(" "),a("td",[t._v("报文尾部的首部")])]),t._v(" "),a("tr",[a("td",[t._v("Trasfer-Encoding")]),t._v(" "),a("td",[t._v("指定报文主体的传输编码方式")])]),t._v(" "),a("tr",[a("td",[t._v("Upgrade")]),t._v(" "),a("td",[t._v("升级为其他协议")])]),t._v(" "),a("tr",[a("td",[t._v("Via")]),t._v(" "),a("td",[t._v("代理服务器信息")])]),t._v(" "),a("tr",[a("td",[t._v("Warning")]),t._v(" "),a("td",[t._v("错误通知")])])])]),t._v(" "),a("h3",{attrs:{id:"请求标头-request-header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求标头-request-header"}},[t._v("#")]),t._v(" 请求标头(Request Header)")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("GET")]),t._v(" /home.html HTTP/1.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Host:")]),t._v(" developer.mozilla.org\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("User-Agent:")]),t._v(" Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:50.0) Gecko/20100101 Firefox/50.0\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept:")]),t._v(" text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept-Language:")]),t._v(" en-US,en;q=0.5\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept-Encoding:")]),t._v(" gzip, deflate, br\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Referer:")]),t._v(" https://developer.mozilla.org/testpage.html\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Connection:")]),t._v(" keep-alive\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Upgrade-Insecure-Requests:")]),t._v(" 1\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("If-Modified-Since:")]),t._v(" Mon, 18 Jul 2016 02:36:04 GMT\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("If-None-Match:")]),t._v(' "c561c68d0ba92bbeb8b0fff2a9199f722e3a621a"\n'),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control:")]),t._v(" max-age=0\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("首部字段名")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Accept")]),t._v(" "),a("td",[t._v("用户代理可处理的媒体类型")])]),t._v(" "),a("tr",[a("td",[t._v("Accept-Charset")]),t._v(" "),a("td",[t._v("优先的字符集")])]),t._v(" "),a("tr",[a("td",[t._v("Accept-Encoding")]),t._v(" "),a("td",[t._v("优先的编码")])]),t._v(" "),a("tr",[a("td",[t._v("Accept-Langulage")]),t._v(" "),a("td",[t._v("优先的语言")])]),t._v(" "),a("tr",[a("td",[t._v("Authorization Web")]),t._v(" "),a("td",[t._v("认证信息")])]),t._v(" "),a("tr",[a("td",[t._v("Expect")]),t._v(" "),a("td",[t._v("期待服务器的特定行为")])]),t._v(" "),a("tr",[a("td",[t._v("From")]),t._v(" "),a("td",[t._v("用户的电子邮箱地址")])]),t._v(" "),a("tr",[a("td",[t._v("Host")]),t._v(" "),a("td",[t._v("请求资源所在的服务器")])]),t._v(" "),a("tr",[a("td",[t._v("If-Match")]),t._v(" "),a("td",[t._v("比较实体标记")])]),t._v(" "),a("tr",[a("td",[t._v("If-Modified-Since")]),t._v(" "),a("td",[t._v("比较资源的更新时间，用于缓存")])]),t._v(" "),a("tr",[a("td",[t._v("If-None-Match")]),t._v(" "),a("td",[t._v("比较实体标记")])]),t._v(" "),a("tr",[a("td",[t._v("If-Range")]),t._v(" "),a("td",[t._v("资源未更新时发送实体 Byte 的范围请求")])]),t._v(" "),a("tr",[a("td",[t._v("If-Unmodified-Since")]),t._v(" "),a("td",[t._v("比较资源的更新时间(和 If-Modified-Since 相反)")])]),t._v(" "),a("tr",[a("td",[t._v("Max-Forwards")]),t._v(" "),a("td",[t._v("最大传输跳数")])]),t._v(" "),a("tr",[a("td",[t._v("Proxy-Authorization")]),t._v(" "),a("td",[t._v("代理服务器需要客户端认证")])]),t._v(" "),a("tr",[a("td",[t._v("Range")]),t._v(" "),a("td",[t._v("实体字节范围请求")])]),t._v(" "),a("tr",[a("td",[t._v("Referer")]),t._v(" "),a("td",[t._v("请求中的 URI 的原始获取方")])]),t._v(" "),a("tr",[a("td",[t._v("TE")]),t._v(" "),a("td",[t._v("传输编码的优先级")])]),t._v(" "),a("tr",[a("td",[t._v("User-Agent HTTP")]),t._v(" "),a("td",[t._v("客户端程序的信")])])])]),t._v(" "),a("h3",{attrs:{id:"实体标头-entity-header-fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实体标头-entity-header-fields"}},[t._v("#")]),t._v(" 实体标头(Entity Header Fields)")]),t._v(" "),a("p",[t._v("实体标头是描述消息正文内容的 HTTP 标头。实体标头用于 HTTP 请求和响应中。头部"),a("code",[t._v("Content-Length")]),t._v("、 "),a("code",[t._v("Content-Language")]),t._v("、 "),a("code",[t._v("Content-Encoding")]),t._v(" 是实体头。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("首部字段名")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Allow")]),t._v(" "),a("td",[t._v("资源可支持的 HTTP 方法")])]),t._v(" "),a("tr",[a("td",[t._v("Content-Encoding")]),t._v(" "),a("td",[t._v("实体主体适用的编码方式")])]),t._v(" "),a("tr",[a("td",[t._v("Content-Language")]),t._v(" "),a("td",[t._v("实体主体的自然语言")])]),t._v(" "),a("tr",[a("td",[t._v("Content-Length")]),t._v(" "),a("td",[t._v("实体主体的大小（单位：字节）")])]),t._v(" "),a("tr",[a("td",[t._v("Content-Location")]),t._v(" "),a("td",[t._v("替代对应资源的 URI")])]),t._v(" "),a("tr",[a("td",[t._v("Content-MD5")]),t._v(" "),a("td",[t._v("实体主体的报文摘要")])]),t._v(" "),a("tr",[a("td",[t._v("Content-Range")]),t._v(" "),a("td",[t._v("实体主体的位置范围")])]),t._v(" "),a("tr",[a("td",[t._v("Content-Type")]),t._v(" "),a("td",[t._v("实体主体的媒体类型")])]),t._v(" "),a("tr",[a("td",[t._v("Expires")]),t._v(" "),a("td",[t._v("实体主体过期的日期时间")])]),t._v(" "),a("tr",[a("td",[t._v("Last-Modified")]),t._v(" "),a("td",[t._v("资源的最后修改日期时间")])])])]),t._v(" "),a("h3",{attrs:{id:"响应表头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应表头"}},[t._v("#")]),t._v(" 响应表头")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("200 OK\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Access-Control-Allow-Origin:")]),t._v(" *\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Connection:")]),t._v(" Keep-Alive\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Encoding:")]),t._v(" gzip\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Type:")]),t._v(" text/html; charset=utf-8\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Date:")]),t._v(" Mon, 18 Jul 2016 16:06:00 GMT\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Etag:")]),t._v(' "c561c68d0ba92bbeb8b0f612a9199f722e3a621a"\n'),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Keep-Alive:")]),t._v(" timeout=5, max=997\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Last-Modified:")]),t._v(" Mon, 18 Jul 2016 02:36:04 GMT\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Server:")]),t._v(" Apache\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie:")]),t._v(" mykey=myvalue; expires=Mon, 17-Jul-2017 16:06:00 GMT; Max-Age=31449600; Path=/; secure\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Transfer-Encoding:")]),t._v(" chunked\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Vary:")]),t._v(" Cookie, Accept-Encoding\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("x-frame-options:")]),t._v(" DENY\n")])])]),a("p",[t._v("响应状态码：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("1XX Informational(信息性状态码)")])]),t._v(" "),a("li",[a("strong",[t._v("2XX Success(成功状态码)")]),t._v(" "),a("ul",[a("li",[t._v("200(OK 客户端发过来的数据被正常处理")]),t._v(" "),a("li",[t._v("204(Not Content 正常响应，没有实体")]),t._v(" "),a("li",[t._v("206(Partial Content 范围请求，返回部分数据，响应报文中由 content-Range 指定实体内容)")])])]),t._v(" "),a("li",[a("strong",[t._v("3XX Redirection(重定向)")]),t._v(" "),a("ul",[a("li",[t._v("301(Moved Permanently) 永久重定向")]),t._v(" "),a("li",[t._v("302(Found)临时重定向，规范要求，方法名不变，但是都会改变")]),t._v(" "),a("li",[t._v("303(See Other) 和 302 类似，但必须用 GET 方法")]),t._v(" "),a("li",[t._v("304(Not Modified)状态未改变，配合(If-Match、If-Modified-Since、If-None_Match、If-Range、If-Unmodified-Since)")]),t._v(" "),a("li",[t._v("307(Temporary Redirect) 临时重定向，不该改变请求方法")])])]),t._v(" "),a("li",[a("strong",[t._v("4XX Client Error(客户端错误状态码)")]),t._v(" "),a("ul",[a("li",[t._v("400(Bad Request) 请求报文语法错误")]),t._v(" "),a("li",[t._v("401 (unauthorized) 需要认证")]),t._v(" "),a("li",[t._v("403(Forbidden) 服务器拒绝访问对应的资源")]),t._v(" "),a("li",[t._v("404(Not Found) 服务器上无法找到资源")])])]),t._v(" "),a("li",[a("strong",[t._v("5XX Server Error(服务器错误状态吗)")]),t._v(" "),a("ul",[a("li",[t._v("500(Internal Server Error)服务器故障")]),t._v(" "),a("li",[t._v("503(Service Unavailable)服务器处于超负载或正在停机维护")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("首部字段名")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Accept-Ranges")]),t._v(" "),a("td",[t._v("是否接受字节范围请求")])]),t._v(" "),a("tr",[a("td",[t._v("Age")]),t._v(" "),a("td",[t._v("推算资源创建经过时间")])]),t._v(" "),a("tr",[a("td",[t._v("ETag")]),t._v(" "),a("td",[t._v("资源的匹配信息")])]),t._v(" "),a("tr",[a("td",[t._v("Location")]),t._v(" "),a("td",[t._v("令客户端重定向至指定 URI")])]),t._v(" "),a("tr",[a("td",[t._v("Proxy-Authenticate")]),t._v(" "),a("td",[t._v("代理服务器对客户端的认证信息")])]),t._v(" "),a("tr",[a("td",[t._v("Retry-After")]),t._v(" "),a("td",[t._v("对再次发起请求的时机要求")])]),t._v(" "),a("tr",[a("td",[t._v("Server")]),t._v(" "),a("td",[t._v("HTTP 服务器的安装信息")])]),t._v(" "),a("tr",[a("td",[t._v("Vary")]),t._v(" "),a("td",[t._v("代理服务器缓存的管理信息")])]),t._v(" "),a("tr",[a("td",[t._v("WWW-Authenticate")]),t._v(" "),a("td",[t._v("服务器对客户端的认证信息")])])])]),t._v(" "),a("h3",{attrs:{id:"内容协商"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容协商"}},[t._v("#")]),t._v(" 内容协商")]),t._v(" "),a("p",[t._v("内容协商主要有以下 3 种类型：")]),t._v(" "),a("ul",[a("li",[t._v("服务器驱动协商（Server-driven Negotiation）")]),t._v(" "),a("li",[t._v("客户端驱动协商（Agent-driven Negotiation）")]),t._v(" "),a("li",[t._v("透明协商（Transparent Negotiation），是服务器驱动和客户端驱动的结合体，是由服务器端和客户端各自进行内容协商的一种方法。")])]),t._v(" "),a("p",[t._v("内容协商的分类有很多种，主要的几种类型是：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")])]),t._v(" "),a("li",[a("code",[t._v("Accept-Charset: unknown")])]),t._v(" "),a("li",[a("code",[t._v("Accept-Language: en-US,en;q=0.5")])]),t._v(" "),a("li",[a("code",[t._v("Accept-Encoding: gzip, deflate, br")])]),t._v(" "),a("li",[t._v("Content-Language")])]),t._v(" "),a("h2",{attrs:{id:"关于-accept-系列字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-accept-系列字段"}},[t._v("#")]),t._v(" 关于 Accept 系列字段")]),t._v(" "),a("p",[t._v("对于 Accept 系列字段的介绍分为四个部分: "),a("strong",[t._v("数据格式")]),t._v("、"),a("strong",[t._v("压缩方式")]),t._v("、"),a("strong",[t._v("支持语言")]),t._v("和"),a("strong",[t._v("字符集")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"数据格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据格式"}},[t._v("#")]),t._v(" 数据格式")]),t._v(" "),a("p",[a("strong",[t._v("MIME 类型")]),t._v("是一系列消息内容类型的集合。类型体现在"),a("code",[t._v("Content-Type")]),t._v("这个字段和"),a("code",[t._v("Accept")]),t._v("字段。")]),t._v(" "),a("p",[t._v("那么 MIME 类型都有哪些呢？")]),t._v(" "),a("ul",[a("li",[t._v("文本文件： text/html、text/plain、text/css、application/xhtml+xml、application/xml")]),t._v(" "),a("li",[t._v("图片文件： image/jpeg、image/gif、image/png")]),t._v(" "),a("li",[t._v("视频文件： video/mpeg、video/quicktime")]),t._v(" "),a("li",[t._v("应用程序二进制文件： application/json、application/javascript、application/pdf、application/octet-stream、application/octet-stream、application/zip")])]),t._v(" "),a("h3",{attrs:{id:"压缩方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压缩方式"}},[t._v("#")]),t._v(" 压缩方式")]),t._v(" "),a("p",[t._v("体现在了"),a("code",[t._v("Content-Encoding")]),t._v("字段和"),a("code",[t._v("Accept-Encoding")]),t._v("字段上。这个字段的取值有下面几种：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("gzip")]),t._v(": 当今最流行的压缩格式")]),t._v(" "),a("li",[a("strong",[t._v("deflate")]),t._v(": 另外一种著名的压缩格式")]),t._v(" "),a("li",[a("strong",[t._v("br")]),t._v(": 一种专门为 HTTP 发明的压缩算法")])]),t._v(" "),a("h3",{attrs:{id:"支持语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持语言"}},[t._v("#")]),t._v(" 支持语言")]),t._v(" "),a("p",[a("code",[t._v("Content-Language")]),t._v("字段和"),a("code",[t._v("Accept-Language")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接收端")]),t._v("\nAccept-Language: zh-CN, zh, en\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发送端")]),t._v("\nContent-Language: zh-CN, zh, en\n")])])]),a("h3",{attrs:{id:"字符集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[t._v("#")]),t._v(" 字符集")]),t._v(" "),a("p",[t._v("最后是一个比较特殊的字段, 在接收端对应为"),a("code",[t._v("Accept-Charset")]),t._v("，指定可以接受的字符集，而在发送端直接放在了"),a("code",[t._v("Content-Type")]),t._v("中，以 charset 属性指定。如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接收端")]),t._v("\nAccept-Charset: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf-8\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发送端")]),t._v("\nContent-Type: text/html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf-8\n")])])]),a("p",[t._v("它们之间的关系：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("接收端")]),t._v(" "),a("th",[t._v("发送端")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Accept, Accept-Charset")]),t._v(" "),a("td",[t._v("Content-Type")])]),t._v(" "),a("tr",[a("td",[t._v("Accept-Encoding")]),t._v(" "),a("td",[t._v("Content-Encoding")])]),t._v(" "),a("tr",[a("td",[t._v("Accept-Language")]),t._v(" "),a("td",[t._v("Content-Language")])])])]),t._v(" "),a("h2",{attrs:{id:"http-的优点和缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-的优点和缺点"}},[t._v("#")]),t._v(" HTTP 的优点和缺点")]),t._v(" "),a("h3",{attrs:{id:"http-的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-的优点"}},[t._v("#")]),t._v(" HTTP 的优点")]),t._v(" "),a("ul",[a("li",[t._v("简单灵活易扩展")]),t._v(" "),a("li",[t._v("应用广泛、环境成熟")]),t._v(" "),a("li",[t._v("可靠传输，请求-应答")]),t._v(" "),a("li",[t._v("无状态")])]),t._v(" "),a("h3",{attrs:{id:"http-的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-的缺点"}},[t._v("#")]),t._v(" HTTP 的缺点")]),t._v(" "),a("ul",[a("li",[t._v("无状态")])]),t._v(" "),a("p",[t._v("既然服务器没有记忆能力，它就无法支持需要连续多个步骤的事务操作。每次都得问一遍身份信息，不仅麻烦，而且还增加了不必要的数据传输量。由此出现了 Cookie 技术。")]),t._v(" "),a("ul",[a("li",[t._v("明文传输")])]),t._v(" "),a("p",[t._v("HTTP 协议里还有一把优缺点一体的双刃剑，就是明文传输。明文意思就是协议里的报文（准确地说是 header 部分）不使用二进制数据，而是用简单可阅读的文本形式。")]),t._v(" "),a("p",[t._v("对比 TCP、UDP 这样的二进制协议，它的优点显而易见，不需要借助任何外部工具，用浏览器、Wireshark 或者 tcpdump 抓包后，直接用肉眼就可以很容易地查看或者修改，为我们的开发调试工作带来极大的便利。\n当然缺点也是显而易见的，就是不安全，可以被监听和被窥探。因为无法判断通信双方的身份，不能判断报文是否被更改过。")]),t._v(" "),a("ul",[a("li",[t._v("队头阻塞问题")])]),t._v(" "),a("p",[t._v("当 http 开启长连接时，共用一个 TCP 连接，同一时刻只能处理一个请求，那么当前请求耗时过长的情况下，其它的请求只能处于阻塞状态")]),t._v(" "),a("ul",[a("li",[t._v("性能")])]),t._v(" "),a("p",[t._v("HTTP 的性能不算差，但不完全适应现在的互联网，还有很大的提升空间。")]),t._v(" "),a("h2",{attrs:{id:"学习资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习资料"}},[t._v("#")]),t._v(" 学习资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e1870736fb9a02fef3a5dcb",target:"_blank",rel:"noopener noreferrer"}},[t._v("看完这篇 HTTP，跟面试官扯皮就没问题了"),a("OutboundLink")],1),t._v(" - 从概念出发，梳理了各个名字的基本含义")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e76bd516fb9a07cce750746",target:"_blank",rel:"noopener noreferrer"}},[t._v("（建议精读）HTTP 灵魂之问，巩固你的 HTTP 知识体系"),a("OutboundLink")],1),t._v(" - 作者整理的非常详细")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e198194e51d451c88361977",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 协议学习太枯燥？那我们看图吧～"),a("OutboundLink")],1),t._v(" - 可以当做手册学习")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5ba9d5075188255c652d4208",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端必须懂的计算机网络知识—(HTTP)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5bb1cc2af265da0ae5052496",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端必须懂的计算机网络知识—(跨域、代理、本地存储)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/a6d086a3997d",target:"_blank",rel:"noopener noreferrer"}},[t._v("计算机网络：这是一份全面& 详细 HTTP 知识讲解"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5ad7e6c35188252ebd06acfa",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试带你飞：这是一份全面的 计算机网络基础 总结攻略"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5ceebb7251882507266414b7",target:"_blank",rel:"noopener noreferrer"}},[t._v("「真 ® 全栈之路 - DNS 篇」故事从输入 URL 开始....."),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://4ark.me/post/b6c7c0a2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("在浏览器输入 URL 回车之后发生了什么（超详细版）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/c1d6a294d3c0",target:"_blank",rel:"noopener noreferrer"}},[t._v("一次完整的 HTTP 请求与响应涉及了哪些知识？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/59ba146c6fb9a00a4636d8b6",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 Http 请求、DNS 劫持与解析"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5df7959051882512480a83e7",target:"_blank",rel:"noopener noreferrer"}},[t._v("漫画：用故事说透 HTTPS"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);